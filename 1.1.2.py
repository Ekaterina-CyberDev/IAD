def find_gcd_with_8(number):
    
    # Преобразуем число 8 в двоичный вид и убираем префикс '0b'
    bin_8 = bin(8)[2:]
    
    # Преобразуем входное число в двоичный вид(строка)
    bin_num = bin(number)[2:]
    
    last_bits = bin_num[-3:]  # последние 3 бита (для проверки делимости на 8)
    
    # проверка делимости на степени двойки 
    if bin_num[-1] == '0':  # если последний бит 0 - делится на 2
        
        # Проверяем делимость на 4 (последние 2 бита = 00)
        if len(bin_num) >= 2 and bin_num[-2] == '0':  # предпоследний бит 0 - делится на 4
            
            # Проверяем делимость на 8 (последние 3 бита = 000)
            if len(bin_num) >= 3 and bin_num[-3] == '0':
                return 8  # НОД = 8
            else:
                return 4  # НОД = 4 (делится на 4, но не на 8)
        else:
            return 2  # НОД = 2 (делится на 2, но не на 4)
    else:
        return 1  # если не делится на 2, то НОД = 1

ten_digit_number = 1112343566  # задаем 10-значное число

result = find_gcd_with_8(ten_digit_number)
print(f"НОД числа 8 и {ten_digit_number} равен {result}")