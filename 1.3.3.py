import re  # для работы с регулярными выражениями (поиск слов)
from collections import Counter  # для подсчета частотности

# Берет готовый текст (в переменной sample_text)
# Очищает текст - убирает знаки препинания, приводит к нижнему регистру
# Разбивает на отдельные слова
# Считает сколько раз каждое слово встречается
# Выводит результаты - самые частые слова и статистику

sample_text = """
Python — это язык программирования высокого уровня. 
Python популярен благодаря простому синтаксису и читаемости кода.
Программирование на Python доставляет удовольствие.
Python используется для веб-разработки, анализа данных и искусственного интеллекта.
"""

# Определяем функцию для анализа текста
def analyze_text(text):
    """Анализирует текст и выводит частотность слов"""
    
    # Приводим весь текст к нижнему регистру (чтобы "Python" и "python" считались одним словом)
    # и разбиваем на слова с помощью регулярного выражения
    # r'\w+' означает "найти все последовательности буквенных символов"
    words = re.findall(r'\w+', text.lower())
    # Теперь words = ['python', 'это', 'язык', 'программирования', ...]
    
    # Создаем счетчик, который автоматически подсчитает частотность слов
    word_counter = Counter(words)
    # Теперь word_counter содержит: {'python': 4, 'и': 2, 'данных': 1, ...}
    
    # Выводим заголовок для результатов
    print("Частотность слов:")
    
    # Перебираем 10 самых частых слов и их количество
    # most_common(10) возвращает список кортежей: [('python', 4), ('и', 2), ...]
    for word, count in word_counter.most_common(10):
        # Для каждого слова выводим его и количество повторений
        print(f"'{word}': {count}")
    
    # Выводим пустую строку для разделения
    print(f"\nВсего слов: {len(words)}")  # Общее количество всех слов в тексте
    print(f"Уникальных слов: {len(word_counter)}")  # Количество разных слов

# Запускаем анализ, передавая нашей функции текст для анализа
analyze_text(sample_text)