# Импорт необходимых библиотек
import matplotlib.pyplot as plt  # Для построения графиков
import numpy as np  # Для математических вычислений

# Данные среднесуточных температур за 2024 год для Москвы (обновленные значения)
moscow_temps = {
    'Янв': [-15, -18, -12, -8, -6, -10, -14, -16, -19, -11, -7, -5, -3, -1, 0, 2, -2, -4, -9, -13, -17, -20, -15, -10, -6, -8, -12, -16, -14, -9, -5],
    'Фев': [-8, -12, -6, -4, -2, 0, 3, -1, -5, -9, -11, -7, -3, 1, 4, 2, -2, -6, -10, -13, -8, -4, 0, -3, -7, -11, -9, -5, -1],
    'Мар': [-3, -7, 0, 4, 2, 6, 8, 5, 1, -2, -5, 3, 7, 10, 6, 4, 9, 12, 8, 3, 0, -4, 2, 5, 7, 11, 9, 6, 2, -1, 4],
    'Апр': [7, 3, 10, 8, 12, 15, 11, 6, 4, 9, 13, 16, 14, 10, 7, 5, 8, 11, 15, 18, 13, 9, 6, 3, 7, 10, 14, 12, 8, 5],
    'Май': [14, 10, 17, 15, 19, 22, 18, 13, 11, 16, 20, 23, 21, 17, 14, 12, 15, 18, 22, 25, 20, 16, 13, 10, 14, 17, 21, 19, 15, 12, 9],
    'Июн': [20, 16, 23, 21, 25, 28, 24, 19, 17, 22, 26, 29, 27, 23, 20, 18, 21, 24, 28, 31, 26, 22, 19, 16, 20, 23, 27, 25, 21, 18],
    'Июл': [22, 18, 25, 23, 27, 30, 26, 21, 19, 24, 28, 31, 29, 25, 22, 20, 23, 26, 30, 33, 28, 24, 21, 18, 22, 25, 29, 27, 23, 20, 17],
    'Авг': [20, 16, 23, 21, 25, 28, 24, 19, 17, 22, 26, 29, 27, 23, 20, 18, 21, 24, 28, 31, 26, 22, 19, 16, 20, 23, 27, 25, 21, 18, 15],
    'Сен': [14, 10, 17, 15, 19, 22, 18, 13, 11, 16, 20, 23, 21, 17, 14, 12, 15, 18, 22, 25, 20, 16, 13, 10, 14, 17, 21, 19, 15, 12],
    'Окт': [8, 4, 11, 9, 13, 16, 12, 7, 5, 10, 14, 17, 15, 11, 8, 6, 9, 12, 16, 19, 14, 10, 7, 4, 8, 11, 15, 13, 9, 6, 3],
    'Ноя': [1, -3, 4, 2, 6, 9, 5, 0, -2, 3, 7, 10, 8, 4, 1, -1, 2, 5, 9, 12, 7, 3, 0, -3, 1, 4, 8, 6, 2, -1],
    'Дек': [-5, -9, -2, 0, 4, 7, 3, -2, -4, 1, 5, 8, 6, 2, -1, -3, 0, 3, 7, 10, 5, 1, -2, -5, -1, 2, 6, 4, 0, -3, -6]
}

# Данные среднесуточных температур за 2024 год для Анадыря (обновленные значения)
anadyr_temps = {
    'Янв': [-28, -31, -25, -21, -19, -23, -27, -29, -32, -24, -20, -18, -16, -14, -12, -10, -15, -17, -22, -26, -30, -33, -28, -23, -19, -21, -25, -29, -27, -22, -18],
    'Фев': [-21, -25, -19, -17, -15, -13, -10, -16, -18, -22, -24, -20, -16, -12, -9, -11, -15, -19, -23, -26, -21, -17, -13, -16, -20, -24, -22, -18, -14],
    'Мар': [-17, -21, -14, -10, -12, -8, -6, -11, -15, -18, -21, -13, -9, -6, -10, -12, -7, -4, -8, -13, -16, -20, -14, -11, -7, -3, -5, -8, -12, -15, -10],
    'Апр': [-9, -13, -6, -4, -2, 1, -3, -8, -10, -7, -3, 0, -2, -6, -9, -11, -8, -5, -1, 2, -3, -7, -10, -13, -9, -6, -2, -4, -8, -11],
    'Май': [-1, -5, 2, 4, 6, 9, 5, 0, -2, 3, 7, 10, 8, 4, 1, -1, 2, 5, 9, 12, 7, 3, 0, -3, 1, 4, 8, 6, 2, -1, 3],
    'Июн': [7, 3, 10, 8, 12, 15, 11, 6, 4, 9, 13, 16, 14, 10, 7, 5, 8, 11, 15, 18, 13, 9, 6, 3, 7, 10, 14, 12, 8, 5],
    'Июл': [13, 9, 16, 14, 18, 21, 17, 12, 10, 15, 19, 22, 20, 16, 13, 11, 14, 17, 21, 24, 19, 15, 12, 9, 13, 16, 20, 18, 14, 11, 8],
    'Авг': [11, 7, 14, 12, 16, 19, 15, 10, 8, 13, 17, 20, 18, 14, 11, 9, 12, 15, 19, 22, 17, 13, 10, 7, 11, 14, 18, 16, 12, 9, 6],
    'Сен': [5, 1, 8, 6, 10, 13, 9, 4, 2, 7, 11, 14, 12, 8, 5, 3, 6, 9, 13, 16, 11, 7, 4, 1, 5, 8, 12, 10, 6, 3],
    'Окт': [-3, -7, 0, 2, 6, 9, 5, 0, -2, 3, 7, 10, 8, 4, 1, -1, 2, 5, 9, 12, 7, 3, 0, -3, 1, 4, 8, 6, 2, -1, -4],
    'Ноя': [-11, -15, -8, -6, -2, 1, -3, -8, -10, -7, -3, 0, -2, -6, -9, -11, -8, -5, -1, 2, -3, -7, -10, -13, -9, -6, -2, -4, -8, -11],
    'Дек': [-19, -23, -16, -14, -10, -7, -11, -16, -18, -13, -9, -6, -8, -12, -15, -17, -14, -11, -7, -4, -9, -13, -16, -19, -15, -12, -8, -10, -14, -17, -20]
}

# Список месяцев в сокращенном формате для графиков
months = ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек']

# Список месяцев в полном формате для таблицы
months_rus = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']

# Вычисление стандартного отклонения температур для каждого месяца в Москве
moscow_std = [np.std(moscow_temps[month]) for month in months]

# Вычисление стандартного отклонения температур для каждого месяца в Анадыре
anadyr_std = [np.std(anadyr_temps[month]) for month in months]

# Создание фигуры для графика размером 12x6 дюймов
plt.figure(figsize=(12, 6))

# Построение линии графика для Москвы с кружками-маркерами
plt.plot(months, moscow_std, 'o-', linewidth=2, label='Москва', color='purple', markersize=6)

# Построение линии графика для Анадыря с квадратными маркерами
plt.plot(months, anadyr_std, 's-', linewidth=2, label='Анадырь', color='pink', markersize=6)

# Подпись оси X (горизонтальной)
plt.xlabel('Месяцы', fontsize=12)

# Подпись оси Y (вертикальной)
plt.ylabel('Стандартное отклонение (°C)', fontsize=12)

# Заголовок графика
plt.title('Стандартное отклонение среднесуточных температур по месяцам 2024 года', fontsize=14, pad=20)

# Добавление легенды для идентификации линий
plt.legend(fontsize=11)

# Включение сетки на графике с прозрачностью 0.3
plt.grid(True, alpha=0.3)

# Добавление числовых значений над точками данных
for i, (m, a) in enumerate(zip(moscow_std, anadyr_std)):
    # Подпись значений для Москвы (синим цветом)
    plt.annotate(f'{m:.1f}', (i, m), xytext=(0, 10), textcoords="offset points", ha='center', fontsize=8, color='blue')
    # Подпись значений для Анадыря (красным цветом)
    plt.annotate(f'{a:.1f}', (i, a), xytext=(0, 10), textcoords="offset points", ha='center', fontsize=8, color='red')

# Автоматическая регулировка布局 для предотвращения обрезания элементов
plt.tight_layout()

# Отображение графика
plt.show()

# Вывод заголовка таблицы статистики
print("=" * 60)
print("ТАБЛИЦА СТАТИСТИКИ ТЕМПЕРАТУР 2024 ГОДА")
print("=" * 60)

# Заголовок колонок таблицы
print(f"{'Месяц':<12} {'Москва':<8} {'Анадырь':<8} {'Разница':<8}")
print("-" * 60)

# Вывод данных по каждому месяцу
for i, month in enumerate(months_rus):
    # Вычисление разницы между Анадырем и Москвой
    diff = anadyr_std[i] - moscow_std[i]
    # Определение знака для разницы (+ или -)
    diff_sign = "+" if diff > 0 else ""
    # Вывод строки с данными месяца
    print(f"{month:<12} {moscow_std[i]:<8.2f} {anadyr_std[i]:<8.2f} {diff_sign}{diff:<7.2f}")

# Разделительная линия перед итогами
print("-" * 60)

# Вычисление средних значений стандартных отклонений
avg_moscow = np.mean(moscow_std)
avg_anadyr = np.mean(anadyr_std)

# Вычисление общей разницы
total_diff = avg_anadyr - avg_moscow
# Определение знака для общей разницы
total_sign = "+" if total_diff > 0 else ""

# Вывод итоговой строки со средними значениями
print(f"{'СРЕДНЕЕ':<12} {avg_moscow:<8.2f} {avg_anadyr:<8.2f} {total_sign}{total_diff:<7.2f}")

# Завершающая линия таблицы
print("=" * 60)