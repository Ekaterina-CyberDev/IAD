# Определяем функцию для поиска нулей другой функции
def find_zeros_reliable(func, start, end, step=0.001):
    """Надежный поиск нулей функции"""
    # Создаем пустой список для хранения найденных нулей
    zeros = []
    # Устанавливаем начальную точку поиска
    x = start
    
    # Начинаем цикл, который будет выполняться пока x не превысит конец интервала
    while x <= end:
        # Проверяем, близко ли значение функции к нулю в текущей точке x
        if abs(func(x)) < 0.00001:
            # Если да, округляем координату x до 3 знаков после запятой
            zero = round(x, 3)
            # Проверяем: если список нулей пуст ИЛИ последний найденный ноль 
            # достаточно далеко от текущего (больше 0.01), то добавляем новый ноль
            if not zeros or abs(zeros[-1] - zero) > 0.01:
                # Добавляем найденный ноль в список
                zeros.append(zero)
        # Увеличиваем x на шаг для перехода к следующей точке
        x += step
    
    # Возвращаем список всех найденных нулей
    return zeros

# Определяем функцию, нули которой мы хотим найти
def my_function(x):
    # Возвращаем значение квадратичной функции x² - 9
    return x**2 - 9  # Нули при x = -3 и x = 3
    #Нули x^2 - 4: [-2.0, 2.0]     - пример для другой функции
    #Нули 2x + 3: [-1.5]           - пример для линейной функции  
    #Нули x^3 - x: [-1.0, 0.0, 1.0] - пример для кубической функции

# Вызываем функцию поиска нулей для функции my_function на интервале от -5 до 5
zeros = find_zeros_reliable(my_function, -5, 5)
# Выводим результат - найденные нули функции
print("Найдены нули:", zeros)